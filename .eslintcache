[{"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\index.tsx":"1","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\reportWebVitals.ts":"2","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\redux\\store.ts":"3","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\App.tsx":"4","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\redux\\quiz\\quiz.reducers.ts":"5","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\pages\\Create.quiz.page.tsx":"6","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\pages\\Quizzes.list.page.tsx":"7","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\pages\\Manage.quiz.page.tsx":"8","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\pages\\Quiz.page.tsx":"9","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Header\\Header.tsx":"10","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\redux\\quiz\\utils.ts":"11","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\redux\\localstorage.ts":"12","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\redux\\quiz\\quiz.actions.types.ts":"13","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\redux\\quiz\\quiz.action.ts":"14","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Quizzes-list\\Quizzes.list.tsx":"15","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\According-list\\According.list.tsx":"16","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Add-question-form\\Add.question.form.tsx":"17","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Card-container\\Card.container.tsx":"18","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Quiz-final-results\\Quiz.final.results.tsx":"19","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Question-item\\Question.item.tsx":"20","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\utils\\first.chart.uppercase.ts":"21","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Error-message\\Error.message.tsx":"22","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Quiz-card-item\\Quiz.card.item.tsx":"23","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\According-item\\According.item.tsx":"24","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Answer-item\\Answer.item.tsx":"25","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Alert-window\\Alert.window.tsx":"26","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\redux\\toggler\\toggle.reducer.ts":"27","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\redux\\toggler\\toggler.actions.types.ts":"28","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\redux\\toggler\\toggler.actions.ts":"29","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\With-input\\With.input.tsx":"30","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\utils\\confirm.alert.ts":"31","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Add-answer-form\\Add.answer.form.tsx":"32","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Loader\\Loader.tsx":"33","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Fade-animate-container\\Fade.animate.container.tsx":"34","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Create-main-quiz-form\\Create.main.quiz.form.tsx":"35","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Small-massage\\Small.message.tsx":"36","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Form-input\\Form.input.tsx":"37","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Quiz-main-item\\Quiz.main.item.tsx":"38"},{"size":740,"mtime":1607457526647,"results":"39","hashOfConfig":"40"},{"size":425,"mtime":499162500000,"results":"41","hashOfConfig":"40"},{"size":1224,"mtime":1608075173723,"results":"42","hashOfConfig":"40"},{"size":2071,"mtime":1608221352085,"results":"43","hashOfConfig":"40"},{"size":3038,"mtime":1607897770894,"results":"44","hashOfConfig":"40"},{"size":433,"mtime":1608221832234,"results":"45","hashOfConfig":"40"},{"size":402,"mtime":1608219708469,"results":"46","hashOfConfig":"40"},{"size":6190,"mtime":1608235340063,"results":"47","hashOfConfig":"40"},{"size":3054,"mtime":1608233744739,"results":"48","hashOfConfig":"40"},{"size":1395,"mtime":1608223236333,"results":"49","hashOfConfig":"40"},{"size":5069,"mtime":1608067315406,"results":"50","hashOfConfig":"40"},{"size":296,"mtime":1607944027553,"results":"51","hashOfConfig":"40"},{"size":2429,"mtime":1607897991671,"results":"52","hashOfConfig":"40"},{"size":2298,"mtime":1607897969121,"results":"53","hashOfConfig":"40"},{"size":963,"mtime":1607862804248,"results":"54","hashOfConfig":"40"},{"size":6643,"mtime":1608078935489,"results":"55","hashOfConfig":"40"},{"size":3643,"mtime":1608075714294,"results":"56","hashOfConfig":"40"},{"size":395,"mtime":1607863350961,"results":"57","hashOfConfig":"40"},{"size":1374,"mtime":1608123010344,"results":"58","hashOfConfig":"40"},{"size":1912,"mtime":1608132631833,"results":"59","hashOfConfig":"40"},{"size":150,"mtime":1607789482977,"results":"60","hashOfConfig":"40"},{"size":433,"mtime":1607861582526,"results":"61","hashOfConfig":"40"},{"size":3540,"mtime":1608129185892,"results":"62","hashOfConfig":"40"},{"size":1359,"mtime":1607986046082,"results":"63","hashOfConfig":"40"},{"size":730,"mtime":1608074695244,"results":"64","hashOfConfig":"40"},{"size":856,"mtime":1608234142207,"results":"65","hashOfConfig":"40"},{"size":508,"mtime":1607968214135,"results":"66","hashOfConfig":"40"},{"size":188,"mtime":1607967407931,"results":"67","hashOfConfig":"40"},{"size":155,"mtime":1607967287037,"results":"68","hashOfConfig":"40"},{"size":2423,"mtime":1608232014309,"results":"69","hashOfConfig":"40"},{"size":152,"mtime":1608075145865,"results":"70","hashOfConfig":"40"},{"size":1496,"mtime":1608078892433,"results":"71","hashOfConfig":"40"},{"size":727,"mtime":1608220263975,"results":"72","hashOfConfig":"40"},{"size":257,"mtime":1608220661483,"results":"73","hashOfConfig":"40"},{"size":7026,"mtime":1608229220388,"results":"74","hashOfConfig":"40"},{"size":351,"mtime":1608229439454,"results":"75","hashOfConfig":"40"},{"size":510,"mtime":1608229362251,"results":"76","hashOfConfig":"40"},{"size":404,"mtime":1608233717168,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"1rzyt9t",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"80"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"80"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"80"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\index.tsx",[],["159","160"],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\reportWebVitals.ts",[],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\redux\\store.ts",["161"],"import { createStore, applyMiddleware } from \"redux\";\r\nimport { combineReducers } from \"redux\";\r\nimport { quizReducer, quizResultsReducer } from \"./quiz/quiz.reducers\";\r\nimport { toggleReducer } from './toggler/toggle.reducer'\r\nimport logger from 'redux-logger'\r\n\r\nconst middleweres = [logger]\r\n\r\nconst rootReducer = combineReducers({\r\n    quizzes: quizReducer,\r\n    currentQuiz: quizResultsReducer,\r\n    // toggle: toggleReducer\r\n    // quizzesMain: quizzesReducer\r\n})\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>\r\n\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(...middleweres))\r\n\r\n\r\n// const quiz = {\r\n//     title: 'a',\r\n//     description: 'this quiz about a',\r\n//     numberQuestions: 2,\r\n//     questions: {\r\n//         '249863': {\r\n//             question: 'what do u like eat',\r\n//             numberOfAnswers: 3,\r\n//             answers: ['banana', 'apple', 'watermelon']\r\n//         },\r\n//         '48263492863': {\r\n//             question: 'what do u drink eat',\r\n//             numberOfAnswers: 4,\r\n//             answers: ['cola', 'sprite', 'water', 'fanta']\r\n//         }\r\n//     }\r\n// }\r\n\r\n// console.log(Object.values(quiz.questions))\r\n// console.log(quiz.questions['249863'])","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\App.tsx",[],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\redux\\quiz\\quiz.reducers.ts",[],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\pages\\Create.quiz.page.tsx",[],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\pages\\Quizzes.list.page.tsx",[],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\pages\\Manage.quiz.page.tsx",["162","163"],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\pages\\Quiz.page.tsx",["164","165"],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Header\\Header.tsx",["166"],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\redux\\quiz\\utils.ts",["167"],"import { Quiz, QuizEditMain, QuizResults, Quizzes } from \"./model\"\r\nimport {\r\n    AddQuestionActionType,\r\n    AddQuizActionType,\r\n    AddAnswerActionType,\r\n    EditQuestionActionType,\r\n    EditQuizMainActionType,\r\n    RemoveQuestionActionType,\r\n    RemoveQuizActionType,\r\n    RemoveAnswerActionType,\r\n    SetCurrentQuizActionType,\r\n    SetAnswerActionType\r\n} from \"./quiz.actions.types\"\r\nimport { QuizzesState } from \"./quiz.reducers\"\r\n\r\nexport function findQuiz(quizzesObj: Quizzes, quizId: string): Quiz {\r\n    return quizzesObj[quizId].quiz\r\n}\r\n\r\nexport function removeQuestionUtil(currentState: QuizzesState, action: RemoveQuestionActionType) {\r\n    const { quizId, questionId } = action.payload\r\n    const quiz = findQuiz(currentState, quizId)\r\n\r\n    const filtredQuestions = quiz.questions.filter((question) => question.questionId !== questionId)\r\n\r\n    quiz.questions = filtredQuestions\r\n    quiz.numberQuestions -= 1\r\n\r\n    const newState = updateState(currentState, quizId, quiz)\r\n\r\n    return { ...newState }\r\n\r\n}\r\n\r\nexport function addQuestionUtil(currentState: QuizzesState, action: AddQuestionActionType) {\r\n    const { quizId, question } = action.payload\r\n    const quiz = findQuiz(currentState, quizId)\r\n\r\n    quiz.questions = [...quiz.questions, question]\r\n    quiz.numberQuestions += 1\r\n\r\n    const newState = updateState(currentState, quizId, quiz)\r\n\r\n    return { ...newState }\r\n}\r\n\r\nexport function removeAnswerUtil(currentState: QuizzesState, action: RemoveAnswerActionType) {\r\n    const { quizId, questionId, index } = action.payload\r\n    const quiz = findQuiz(currentState, quizId)\r\n\r\n    const questionIndex = quiz.questions.findIndex((question) => question.questionId === questionId)\r\n\r\n    const questionsLess = [...quiz.questions]\r\n\r\n    questionsLess[questionIndex].answers.splice(index, 1)\r\n\r\n    questionsLess[questionIndex].numberOfAnswers -= 1\r\n\r\n    quiz.questions = questionsLess\r\n\r\n    const newState = updateState(currentState, quizId, quiz)\r\n\r\n    return { ...newState }\r\n}\r\n\r\nexport function addAnswerUtil(currentState: QuizzesState, action: AddAnswerActionType) {\r\n    const { quizId, value, questionId } = action.payload\r\n    const quiz = findQuiz(currentState, quizId)\r\n\r\n    const questionIndex = quiz.questions.findIndex((question) => {\r\n        return question.questionId === questionId\r\n    })\r\n\r\n    const questionsNew = [...quiz.questions]\r\n\r\n    questionsNew[questionIndex].answers =\r\n        [...questionsNew[questionIndex].answers, value]\r\n\r\n    questionsNew[questionIndex].numberOfAnswers += 1\r\n\r\n    quiz.questions = questionsNew\r\n\r\n    const newState = updateState(currentState, quizId, quiz)\r\n\r\n    return { ...newState }\r\n}\r\n\r\nexport function editQuestionUtil(currentState: QuizzesState, action: EditQuestionActionType) {\r\n    const { quizId, value, questionId } = action.payload\r\n    const quiz = findQuiz(currentState, quizId)\r\n\r\n    const questionIndex = quiz.questions.findIndex((question) => {\r\n        return question.questionId === questionId\r\n    })\r\n\r\n    const questionsNew = [...quiz.questions]\r\n\r\n    questionsNew[questionIndex].question = value\r\n\r\n    quiz.questions = questionsNew\r\n\r\n    const newState = updateState(currentState, quizId, quiz)\r\n\r\n    return { ...newState }\r\n}\r\n\r\nexport function createQuizUtil(currentState: QuizzesState, action: AddQuizActionType) {\r\n    return {\r\n        ...currentState,\r\n        [action.payload.quizId]: {\r\n            quiz: action.payload\r\n        }\r\n    }\r\n}\r\n\r\nexport function removeQuizUtil(currentState: QuizzesState, action: RemoveQuizActionType) {\r\n    delete currentState[action.payload]\r\n    return {\r\n        ...currentState\r\n    }\r\n}\r\n\r\nexport function editQuizMainUtil(currentState: QuizzesState, action: EditQuizMainActionType) {\r\n    const { property, value, quizId } = action.payload\r\n\r\n    const quiz = findQuiz(currentState, quizId)\r\n\r\n    quiz[property] = value\r\n\r\n    const newState = updateState(currentState, quizId, quiz)\r\n\r\n    return { ...newState }\r\n}\r\n\r\nexport function updateState(\r\n    currentState: QuizzesState,\r\n    quizId: string,\r\n    newQuizSate: Quiz): QuizzesState {\r\n    return {\r\n        ...currentState,\r\n        [quizId]: {\r\n            quiz: newQuizSate\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// ******************************************************************************************************************\r\n// RESULTS UTILS\r\n\r\nexport function setCurrentQuizUtil(currentState: QuizResults, action: SetCurrentQuizActionType) {\r\n    return {\r\n        ...currentState,\r\n        quizId: action.payload,\r\n        answers: []\r\n    }\r\n}\r\n\r\nexport function setAnswerUtil(currentState: QuizResults, action: SetAnswerActionType) {\r\n    let newAnswersState = [...currentState.answers]\r\n    const index = currentState.answers.findIndex((answer) => answer.question === action.payload.question)\r\n\r\n    if (index !== -1) {\r\n        newAnswersState[index] = action.payload\r\n    } else {\r\n        newAnswersState = [...newAnswersState, action.payload]\r\n    }\r\n\r\n    return {\r\n        ...currentState,\r\n        answers: newAnswersState\r\n    }\r\n}\r\n","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\redux\\localstorage.ts",[],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\redux\\quiz\\quiz.actions.types.ts",[],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\redux\\quiz\\quiz.action.ts",[],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Quizzes-list\\Quizzes.list.tsx",[],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\According-list\\According.list.tsx",[],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Add-question-form\\Add.question.form.tsx",[],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Card-container\\Card.container.tsx",[],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Quiz-final-results\\Quiz.final.results.tsx",[],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Question-item\\Question.item.tsx",[],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\utils\\first.chart.uppercase.ts",[],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Error-message\\Error.message.tsx",[],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Quiz-card-item\\Quiz.card.item.tsx",["168"],"import React, { useEffect, useState } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from 'react-router-dom';\r\nimport { addQuestionAction, removeQuizAction } from '../../redux/quiz/quiz.action';\r\nimport { ReactComponent as EditIcon } from \"../../icons-svg/edit.svg\";\r\nimport { AddQuestion, Quiz } from '../../redux/quiz/model';\r\nimport ErrorMessage from '../Error-message/Error.message';\r\nimport { confirmAlert } from '../../utils/confirm.alert';\r\n\r\n\r\ninterface QuizCardItemProps {\r\n   quiz: Quiz\r\n   quizId: string\r\n   removeQuiz: (quizId: string) => void\r\n}\r\n\r\n\r\nfunction QuizCardItem({ removeQuiz, quizId, quiz }: QuizCardItemProps) {\r\n\r\n   const [isStatusOk, setIsStatusOk] = useState<boolean>(true)\r\n\r\n   useEffect(() => {\r\n      function checkStatus() {\r\n         if (quiz.numberQuestions === 0) {\r\n\r\n            return\r\n         }\r\n         quiz.questions.forEach((question) => {\r\n            setIsStatusOk(true)\r\n            if (question.numberOfAnswers <= 1) {\r\n               console.log(isStatusOk)\r\n               setIsStatusOk(false)\r\n            }\r\n         })\r\n      }\r\n      checkStatus()\r\n   }, [])\r\n\r\n   return (\r\n      <React.Fragment>\r\n         <div className=\"col\">\r\n            <div className={`card mb-4 shadow-sm`}>\r\n               <div className=\"card-header\">\r\n                  <Link\r\n                     to={`quiz/edit/${quizId}`}\r\n                     className=\"edit-quiz-btn edit-icon\">\r\n                     <EditIcon />\r\n                  </Link>\r\n                  <span\r\n                     className=\"delete-quiz-btn\"\r\n                     onClick={() => {\r\n                        if (confirmAlert('quiz')) {\r\n                           removeQuiz(quizId)\r\n                        }\r\n                     }}>\r\n                     X\r\n                  </span>\r\n                  <h4 >\r\n                     {quiz.title}\r\n                  </h4>\r\n               </div>\r\n               <div className=\"card-body\">\r\n                  <div>\r\n                     <small style={{ float: 'left', fontSize: '12px' }}>{quiz.dateCreated}</small>\r\n                  </div>\r\n                  <br />\r\n                  <div >\r\n                     <strong >Description:</strong>\r\n                  </div>\r\n                  <span>{quiz.description}</span>\r\n                  <h6\r\n                     className=\"card-title pricing-card-title\">\r\n                     {quiz.numberQuestions}\r\n                     <small className=\"text-muted\">\r\n                        / Questions\r\n                     </small>\r\n                     &nbsp;\r\n                  </h6>\r\n                  <br />\r\n                  <Link\r\n                     className={`${quiz.questions.length === 0 || !isStatusOk ? 'disabled-btn' : ''} w-100 btn btn-sm btn-blue`}\r\n                     to={`/quiz/${quizId}`}\r\n                     type=\"button\">\r\n                     Try Quiz\r\n                  </Link>\r\n                  <ErrorMessage\r\n                     message={'Some of the questions are missing answers or there are no questions yet'}\r\n                     show={quiz.questions.length === 0 || !isStatusOk} />\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </React.Fragment>\r\n   )\r\n}\r\n\r\n\r\nfunction mapDispatchToState(dispatch: Function) {\r\n   return {\r\n      removeQuiz: (quizId: string) => dispatch(removeQuizAction(quizId)),\r\n      addQuestion: (info: AddQuestion) => dispatch(addQuestionAction(info))\r\n   }\r\n}\r\n\r\n\r\nexport default connect(null, mapDispatchToState)(QuizCardItem)","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\According-item\\According.item.tsx",[],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Answer-item\\Answer.item.tsx",[],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Alert-window\\Alert.window.tsx",[],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\redux\\toggler\\toggle.reducer.ts",[],["169","170"],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\redux\\toggler\\toggler.actions.types.ts",[],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\redux\\toggler\\toggler.actions.ts",[],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\With-input\\With.input.tsx",[],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\utils\\confirm.alert.ts",[],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Add-answer-form\\Add.answer.form.tsx",[],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Loader\\Loader.tsx",[],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Fade-animate-container\\Fade.animate.container.tsx",[],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Create-main-quiz-form\\Create.main.quiz.form.tsx",[],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Small-massage\\Small.message.tsx",[],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Form-input\\Form.input.tsx",[],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Quiz-main-item\\Quiz.main.item.tsx",[],{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","severity":1,"message":"176","line":4,"column":10,"nodeType":"177","messageId":"178","endLine":4,"endColumn":23},{"ruleId":"175","severity":1,"message":"179","line":1,"column":17,"nodeType":"177","messageId":"178","endLine":1,"endColumn":26},{"ruleId":"175","severity":1,"message":"180","line":16,"column":10,"nodeType":"177","messageId":"178","endLine":16,"endColumn":22},{"ruleId":"181","severity":1,"message":"182","line":26,"column":7,"nodeType":"183","endLine":26,"endColumn":28,"suggestions":"184"},{"ruleId":"185","severity":1,"message":"186","line":68,"column":25,"nodeType":"187","endLine":68,"endColumn":72},{"ruleId":"175","severity":1,"message":"188","line":3,"column":10,"nodeType":"177","messageId":"178","endLine":3,"endColumn":14},{"ruleId":"175","severity":1,"message":"189","line":1,"column":16,"nodeType":"177","messageId":"178","endLine":1,"endColumn":28},{"ruleId":"181","severity":1,"message":"190","line":37,"column":7,"nodeType":"183","endLine":37,"endColumn":9,"suggestions":"191"},{"ruleId":"171","replacedBy":"192"},{"ruleId":"173","replacedBy":"193"},"no-native-reassign",["194"],"no-negated-in-lhs",["195"],"@typescript-eslint/no-unused-vars","'toggleReducer' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'filterObject' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentQuiz'. Either include it or remove the dependency array. If 'currentQuiz' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["196"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Link' is defined but never used.","'QuizEditMain' is defined but never used.","React Hook useEffect has missing dependencies: 'isStatusOk', 'quiz.numberQuestions', and 'quiz.questions'. Either include them or remove the dependency array.",["197"],["194"],["195"],"no-global-assign","no-unsafe-negation",{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},"Update the dependencies array to be: [currentQuiz, match.params.quizId]",{"range":"202","text":"203"},"Update the dependencies array to be: [isStatusOk, quiz.numberQuestions, quiz.questions]",{"range":"204","text":"205"},[1053,1074],"[currentQuiz, match.params.quizId]",[1135,1137],"[isStatusOk, quiz.numberQuestions, quiz.questions]"]