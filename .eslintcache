[{"C:\\Users\\nirku\\Desktop\\react redux blackjack\\my-app\\src\\index.tsx":"1","C:\\Users\\nirku\\Desktop\\react redux blackjack\\my-app\\src\\reportWebVitals.ts":"2","C:\\Users\\nirku\\Desktop\\react redux blackjack\\my-app\\src\\App.tsx":"3","C:\\Users\\nirku\\Desktop\\react redux blackjack\\my-app\\src\\components\\Header\\Header.tsx":"4","C:\\Users\\nirku\\Desktop\\react redux blackjack\\my-app\\src\\components\\Footer\\Footer.tsx":"5","C:\\Users\\nirku\\Desktop\\react redux blackjack\\my-app\\src\\components\\Button\\Button.tsx":"6","C:\\Users\\nirku\\Desktop\\react redux blackjack\\my-app\\src\\components\\Form-input\\Form.input.tsx":"7","C:\\Users\\nirku\\Desktop\\react redux blackjack\\my-app\\src\\redux\\store.ts":"8","C:\\Users\\nirku\\Desktop\\react redux blackjack\\my-app\\src\\redux\\quiz\\quiz.actions.types.ts":"9","C:\\Users\\nirku\\Desktop\\react redux blackjack\\my-app\\src\\redux\\quiz\\quiz.action.ts":"10","C:\\Users\\nirku\\Desktop\\react redux blackjack\\my-app\\src\\components\\Create-quiz\\Create.quiz.tsx":"11","C:\\Users\\nirku\\Desktop\\react redux blackjack\\my-app\\src\\pages\\Create.quiz.page.tsx":"12","C:\\Users\\nirku\\Desktop\\react redux blackjack\\my-app\\src\\pages\\Quizzes.list.page.tsx":"13","C:\\Users\\nirku\\Desktop\\react redux blackjack\\my-app\\src\\components\\Quizzes-list\\Quizzes.list.tsx":"14","C:\\Users\\nirku\\Desktop\\react redux blackjack\\my-app\\src\\components\\Quiz-card-item\\Quiz.card.item.tsx":"15","C:\\Users\\nirku\\Desktop\\react redux blackjack\\my-app\\src\\pages\\Quiz.page.tsx":"16","C:\\Users\\nirku\\Desktop\\react redux blackjack\\my-app\\src\\components\\Qestion-item\\Qestion.item.tsx":"17","C:\\Users\\nirku\\Desktop\\react redux blackjack\\my-app\\src\\redux\\quiz\\quiz.reducers.ts":"18"},{"size":740,"mtime":1607457526647,"results":"19","hashOfConfig":"20"},{"size":425,"mtime":499162500000,"results":"21","hashOfConfig":"20"},{"size":884,"mtime":1607518940398,"results":"22","hashOfConfig":"20"},{"size":767,"mtime":1607472093109,"results":"23","hashOfConfig":"20"},{"size":183,"mtime":1607472334318,"results":"24","hashOfConfig":"20"},{"size":265,"mtime":1607372267346,"results":"25","hashOfConfig":"20"},{"size":296,"mtime":1607449265351,"results":"26","hashOfConfig":"20"},{"size":1036,"mtime":1607524852661,"results":"27","hashOfConfig":"20"},{"size":778,"mtime":1607526956272,"results":"28","hashOfConfig":"20"},{"size":904,"mtime":1607527052609,"results":"29","hashOfConfig":"20"},{"size":8138,"mtime":1607523485424,"results":"30","hashOfConfig":"20"},{"size":212,"mtime":1607457729696,"results":"31","hashOfConfig":"20"},{"size":223,"mtime":1607459026641,"results":"32","hashOfConfig":"20"},{"size":1118,"mtime":1607516787477,"results":"33","hashOfConfig":"20"},{"size":1920,"mtime":1607519915030,"results":"34","hashOfConfig":"20"},{"size":1512,"mtime":1607529737654,"results":"35","hashOfConfig":"20"},{"size":1556,"mtime":1607528460312,"results":"36","hashOfConfig":"20"},{"size":2236,"mtime":1607528328484,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"4jruet",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\nirku\\Desktop\\react redux blackjack\\my-app\\src\\index.tsx",[],["76","77"],"C:\\Users\\nirku\\Desktop\\react redux blackjack\\my-app\\src\\reportWebVitals.ts",[],"C:\\Users\\nirku\\Desktop\\react redux blackjack\\my-app\\src\\App.tsx",[],"C:\\Users\\nirku\\Desktop\\react redux blackjack\\my-app\\src\\components\\Header\\Header.tsx",[],"C:\\Users\\nirku\\Desktop\\react redux blackjack\\my-app\\src\\components\\Footer\\Footer.tsx",[],"C:\\Users\\nirku\\Desktop\\react redux blackjack\\my-app\\src\\components\\Button\\Button.tsx",[],"C:\\Users\\nirku\\Desktop\\react redux blackjack\\my-app\\src\\components\\Form-input\\Form.input.tsx",[],"C:\\Users\\nirku\\Desktop\\react redux blackjack\\my-app\\src\\redux\\store.ts",[],"C:\\Users\\nirku\\Desktop\\react redux blackjack\\my-app\\src\\redux\\quiz\\quiz.actions.types.ts",[],"C:\\Users\\nirku\\Desktop\\react redux blackjack\\my-app\\src\\redux\\quiz\\quiz.action.ts",[],"C:\\Users\\nirku\\Desktop\\react redux blackjack\\my-app\\src\\components\\Create-quiz\\Create.quiz.tsx",["78"],"import React, { ChangeEvent, FormEvent, useState } from 'react';\r\nimport { Qestion, Quiz } from '../../redux/quiz/model';\r\nimport { connect } from \"react-redux\";\r\nimport { addQuizAction } from '../../redux/quiz/quiz.action';\r\n\r\ninterface CreateQuizProps {\r\n   addQuiz: (quiz: Quiz) => void\r\n}\r\n\r\nfunction CreateQuiz({ addQuiz }: CreateQuizProps) {\r\n\r\n   const [createQuiz, setQuiz] = useState<Quiz>({\r\n      title: '',\r\n      description: '',\r\n      numberQestions: 0,\r\n      qestions: [],\r\n   })\r\n\r\n\r\n   const [qestion, setQestion] = useState<Qestion>({\r\n      qestion: '',\r\n      numberOfUnswers: 0,\r\n      unswers: []\r\n   })\r\n\r\n   const [isAddQestion, setIsAddQwestion] = useState<boolean>(false)\r\n\r\n\r\n   function handleChange(event: ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>) {\r\n      const { name, value } = event.target\r\n      setQuiz((prev) => {\r\n         return {\r\n            ...prev,\r\n            [name]: value\r\n         }\r\n      })\r\n   }\r\n\r\n   function handleQestionChange(event: ChangeEvent<HTMLInputElement>) {\r\n      const { name, value } = event.target\r\n      setQestion((prev) => {\r\n         return {\r\n            ...prev,\r\n            [name]: name === 'numberOfUnswers' ? Number(value) : value\r\n         }\r\n      })\r\n   }\r\n\r\n   function handleUnswersChnage(event: ChangeEvent<HTMLInputElement>) {\r\n      const { name, value } = event.target\r\n\r\n      if (!value) {\r\n         return\r\n      }\r\n\r\n      const unswers = [...qestion.unswers]\r\n      unswers[Number(name)] = value\r\n\r\n      setQestion((prev) => {\r\n         return {\r\n            ...prev,\r\n            unswers: unswers\r\n         }\r\n      })\r\n   }\r\n\r\n\r\n   function validate() { }\r\n\r\n\r\n   function addQestion() {\r\n\r\n      if (qestion.qestion === '' || qestion.numberOfUnswers === 0 || qestion.unswers.length === 0) {\r\n         return\r\n      }\r\n\r\n      // console.log(qestion.unswers)\r\n\r\n      setQuiz((prev) => {\r\n         return {\r\n            ...prev,\r\n            numberQestions: prev.numberQestions + 1,\r\n            qestions: [...prev.qestions, qestion]\r\n         }\r\n      })\r\n\r\n      setIsAddQwestion(!isAddQestion)\r\n\r\n      resetQestion()\r\n   }\r\n\r\n\r\n   function handleSubmit(event: FormEvent) {\r\n      event.preventDefault()\r\n\r\n      if (createQuiz.numberQestions === 0) {\r\n         return\r\n      }\r\n      alert('CREAT QUIZ')\r\n\r\n      // console.log(createQuiz)\r\n      addQuiz(createQuiz)\r\n\r\n      resetQuiz()\r\n   }\r\n\r\n\r\n   function resetQestion() {\r\n      setQestion({\r\n         numberOfUnswers: 0,\r\n         qestion: '',\r\n         unswers: []\r\n      })\r\n   }\r\n\r\n\r\n   function resetQuiz() {\r\n      setQuiz({\r\n         title: '',\r\n         description: '',\r\n         numberQestions: 0,\r\n         qestions: []\r\n      })\r\n   }\r\n\r\n\r\n   return (\r\n      <>\r\n         <h3 className=\"text-center\">Create your quiz</h3>\r\n         <form onSubmit={handleSubmit}>\r\n            <div className=\"input-ele\">\r\n               <div className=\"form-floating mb-3\">\r\n                  <input\r\n                     name=\"title\"\r\n                     type=\"text\"\r\n                     className=\"form-control\"\r\n                     placeholder=\"Title*\"\r\n                     required\r\n                     value={createQuiz.title}\r\n                     onChange={handleChange}\r\n                  />\r\n                  <label >Title*</label>\r\n               </div>\r\n            </div>\r\n            <div className=\"input-ele\">\r\n               <div className=\"form-floating mb-3\">\r\n                  <textarea\r\n                     style={{ height: \"150px\" }}\r\n                     rows={5}\r\n                     cols={5}\r\n                     required\r\n                     name=\"description\"\r\n                     value={createQuiz.description}\r\n                     className=\"form-control\"\r\n                     placeholder=\"Description*\"\r\n                     onChange={handleChange}\r\n                  />\r\n                  <label >Description*</label>\r\n               </div>\r\n            </div>\r\n            {\r\n               isAddQestion ?\r\n                  (\r\n                     <div>\r\n                        <div className=\"input-ele\">\r\n                           <div className=\"form-floating mb-3\">\r\n                              <input\r\n                                 value={qestion.qestion}\r\n                                 className=\"form-control\"\r\n                                 type=\"text\"\r\n                                 name=\"qestion\"\r\n                                 required\r\n                                 placeholder=\"Qestion\"\r\n                                 onChange={handleQestionChange}\r\n                              />\r\n                              <label >Qestion*</label>\r\n                           </div>\r\n                        </div>\r\n                        <div className=\"input-ele\">\r\n\r\n                           <span>Number of unswers</span>\r\n                           <input\r\n                              id=\"count-unswers\"\r\n                              value={qestion.numberOfUnswers}\r\n                              type=\"number\"\r\n                              required\r\n                              min=\"1\"\r\n                              max=\"6\"\r\n                              name=\"numberOfUnswers\"\r\n                              className=\"form-control\"\r\n                              placeholder=\"Number of unswers\"\r\n                              onChange={handleQestionChange}\r\n                           />\r\n                        </div>\r\n                        {\r\n                           Array.from({ length: qestion.numberOfUnswers }).map((_, index) => {\r\n                              return <div className=\"input-ele\" key={index}>\r\n                                 <input\r\n                                    name={`${index}`}\r\n                                    // value={qestion.unswers[index]}\r\n                                    type=\"text\"\r\n                                    required\r\n                                    className=\"form-control form-control-sm\"\r\n                                    placeholder={`Unswer: ${index + 1}`}\r\n                                    onChange={handleUnswersChnage}\r\n                                 />\r\n                              </div>\r\n                           })\r\n                        }\r\n                        <div className=\"input-ele\">\r\n                           <button\r\n                              onClick={addQestion}\r\n                              className=\"btn btn-primary btn-sm\"\r\n                           >\r\n                              Add qestion\r\n                          </button>\r\n                           &nbsp;\r\n                           <button\r\n                              className=\"btn btn-danger btn-sm\"\r\n                              onClick={() => {\r\n                                 setIsAddQwestion(!isAddQestion)\r\n                                 resetQestion()\r\n                              }}\r\n                           >\r\n                              Cencel\r\n                           </button>\r\n                        </div>\r\n                     </div>\r\n                  ) : (\r\n                     <div className=\"input-ele\">\r\n                        <span>Add qestion</span>\r\n                              &nbsp;\r\n                        <button\r\n                           onClick={() => setIsAddQwestion(!isAddQestion)}\r\n                           className=\"btn btn-dark btn-sm plus-btn\"\r\n                        >\r\n                           +\r\n                        </button>\r\n                     </div>\r\n                  )\r\n            }\r\n            <div className=\"input-ele\">\r\n               <hr />\r\n               <button\r\n                  className=\"btn btn-primary btn-sm\"\r\n                  type=\"submit\"\r\n               >\r\n                  Create quiz\r\n               </button>\r\n            </div>\r\n         </form>\r\n      </>\r\n   )\r\n\r\n}\r\n\r\n\r\nfunction mapDispatchToProps(dispatch: Function) {\r\n   return {\r\n      addQuiz: (quiz: Quiz) => dispatch(addQuizAction(quiz))\r\n   }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(CreateQuiz) ","C:\\Users\\nirku\\Desktop\\react redux blackjack\\my-app\\src\\pages\\Create.quiz.page.tsx",[],"C:\\Users\\nirku\\Desktop\\react redux blackjack\\my-app\\src\\pages\\Quizzes.list.page.tsx",[],"C:\\Users\\nirku\\Desktop\\react redux blackjack\\my-app\\src\\components\\Quizzes-list\\Quizzes.list.tsx",[],"C:\\Users\\nirku\\Desktop\\react redux blackjack\\my-app\\src\\components\\Quiz-card-item\\Quiz.card.item.tsx",[],"C:\\Users\\nirku\\Desktop\\react redux blackjack\\my-app\\src\\pages\\Quiz.page.tsx",["79","80"],"C:\\Users\\nirku\\Desktop\\react redux blackjack\\my-app\\src\\components\\Qestion-item\\Qestion.item.tsx",["81"],"C:\\Users\\nirku\\Desktop\\react redux blackjack\\my-app\\src\\redux\\quiz\\quiz.reducers.ts",[],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":68,"column":13,"nodeType":"88","messageId":"89","endLine":68,"endColumn":21},{"ruleId":"86","severity":1,"message":"90","line":4,"column":10,"nodeType":"88","messageId":"89","endLine":4,"endColumn":14},{"ruleId":"91","severity":1,"message":"92","line":24,"column":8,"nodeType":"93","endLine":24,"endColumn":10,"suggestions":"94"},{"ruleId":"86","severity":1,"message":"95","line":16,"column":17,"nodeType":"88","messageId":"89","endLine":16,"endColumn":21},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"@typescript-eslint/no-unused-vars","'validate' is defined but never used.","Identifier","unusedVar","'Quiz' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentQuiz' and 'match.params.quizId'. Either include them or remove the dependency array. If 'currentQuiz' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["98"],"'name' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"99","fix":"100"},"Update the dependencies array to be: [currentQuiz, match.params.quizId]",{"range":"101","text":"102"},[790,792],"[currentQuiz, match.params.quizId]"]