[{"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\index.tsx":"1","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\reportWebVitals.ts":"2","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\redux\\store.ts":"3","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\App.tsx":"4","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\redux\\quiz\\quiz.reducers.ts":"5","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\pages\\Create.quiz.page.tsx":"6","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\pages\\Quizzes.list.page.tsx":"7","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\pages\\Manage.quiz.page.tsx":"8","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\pages\\Quiz.page.tsx":"9","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Header\\Header.tsx":"10","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\redux\\quiz\\utils.ts":"11","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\redux\\localstorage.ts":"12","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\redux\\quiz\\quiz.actions.types.ts":"13","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\redux\\quiz\\quiz.action.ts":"14","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Quizzes-list\\Quizzes.list.tsx":"15","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\According-list\\According.list.tsx":"16","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Add-question-form\\Add.question.form.tsx":"17","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Card-container\\Card.container.tsx":"18","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Quiz-final-results\\Quiz.final.results.tsx":"19","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Question-item\\Question.item.tsx":"20","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\utils\\first.chart.uppercase.ts":"21","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Error-message\\Error.message.tsx":"22","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Quiz-card-item\\Quiz.card.item.tsx":"23","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\According-item\\According.item.tsx":"24","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Answer-item\\Answer.item.tsx":"25","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Alert-window\\Alert.window.tsx":"26","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\redux\\toggler\\toggle.reducer.ts":"27","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\redux\\toggler\\toggler.actions.types.ts":"28","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\redux\\toggler\\toggler.actions.ts":"29","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\With-input\\With.input.tsx":"30","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\utils\\confirm.alert.ts":"31","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Add-answer-form\\Add.answer.form.tsx":"32","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Loader\\Loader.tsx":"33","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Fade-animate-container\\Fade.animate.container.tsx":"34","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Create-main-quiz-form\\Create.main.quiz.form.tsx":"35","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Small-massage\\Small.message.tsx":"36","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Form-input\\Form.input.tsx":"37","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Quiz-main-item\\Quiz.main.item.tsx":"38","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Footer\\Footer.tsx":"39","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\hooks\\use.form.ts":"40","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\form-validators\\validators.ts":"41","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\redux\\quiz\\quiz.actions.async.types.ts":"42","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\redux\\quiz\\quiz.actions.async.ts":"43"},{"size":740,"mtime":1607457526647,"results":"44","hashOfConfig":"45"},{"size":425,"mtime":499162500000,"results":"46","hashOfConfig":"45"},{"size":1264,"mtime":1608406408191,"results":"47","hashOfConfig":"45"},{"size":1892,"mtime":1608428102767,"results":"48","hashOfConfig":"45"},{"size":4287,"mtime":1608409383106,"results":"49","hashOfConfig":"45"},{"size":433,"mtime":1608221832234,"results":"50","hashOfConfig":"45"},{"size":402,"mtime":1608219708469,"results":"51","hashOfConfig":"45"},{"size":6612,"mtime":1608423759427,"results":"52","hashOfConfig":"45"},{"size":2906,"mtime":1608247638440,"results":"53","hashOfConfig":"45"},{"size":1401,"mtime":1608289033474,"results":"54","hashOfConfig":"45"},{"size":5402,"mtime":1608428223712,"results":"55","hashOfConfig":"45"},{"size":296,"mtime":1607944027553,"results":"56","hashOfConfig":"45"},{"size":2601,"mtime":1608408683052,"results":"57","hashOfConfig":"45"},{"size":2494,"mtime":1608409116281,"results":"58","hashOfConfig":"45"},{"size":1409,"mtime":1608439394309,"results":"59","hashOfConfig":"45"},{"size":6713,"mtime":1608418908702,"results":"60","hashOfConfig":"45"},{"size":4240,"mtime":1608331506564,"results":"61","hashOfConfig":"45"},{"size":405,"mtime":1608406048998,"results":"62","hashOfConfig":"45"},{"size":1374,"mtime":1608430132999,"results":"63","hashOfConfig":"45"},{"size":1912,"mtime":1608132631833,"results":"64","hashOfConfig":"45"},{"size":150,"mtime":1607789482977,"results":"65","hashOfConfig":"45"},{"size":433,"mtime":1607861582526,"results":"66","hashOfConfig":"45"},{"size":4341,"mtime":1608439359508,"results":"67","hashOfConfig":"45"},{"size":1359,"mtime":1607986046082,"results":"68","hashOfConfig":"45"},{"size":730,"mtime":1608074695244,"results":"69","hashOfConfig":"45"},{"size":856,"mtime":1608234142207,"results":"70","hashOfConfig":"45"},{"size":508,"mtime":1607968214135,"results":"71","hashOfConfig":"45"},{"size":188,"mtime":1607967407931,"results":"72","hashOfConfig":"45"},{"size":155,"mtime":1607967287037,"results":"73","hashOfConfig":"45"},{"size":2720,"mtime":1608330220323,"results":"74","hashOfConfig":"45"},{"size":152,"mtime":1608075145865,"results":"75","hashOfConfig":"45"},{"size":1954,"mtime":1608331527483,"results":"76","hashOfConfig":"45"},{"size":434,"mtime":1608425172059,"results":"77","hashOfConfig":"45"},{"size":257,"mtime":1608220661483,"results":"78","hashOfConfig":"45"},{"size":6451,"mtime":1608333883221,"results":"79","hashOfConfig":"45"},{"size":333,"mtime":1608304901688,"results":"80","hashOfConfig":"45"},{"size":520,"mtime":1608304676545,"results":"81","hashOfConfig":"45"},{"size":404,"mtime":1608233717168,"results":"82","hashOfConfig":"45"},{"size":917,"mtime":1608439548648,"results":"83","hashOfConfig":"45"},{"size":1316,"mtime":1608333637006,"results":"84","hashOfConfig":"45"},{"size":3327,"mtime":1608329356740,"results":"85","hashOfConfig":"45"},{"size":608,"mtime":1608404525494,"results":"86","hashOfConfig":"45"},{"size":1374,"mtime":1608422890861,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"1rzyt9t",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"90"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"90"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"90"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"90"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\index.tsx",[],["180","181"],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\reportWebVitals.ts",[],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\redux\\store.ts",[],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\App.tsx",["182","183","184","185"],"import React, { Suspense } from 'react';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport { Route, Switch } from 'react-router';\nimport Footer from './components/Footer/Footer';\nimport { email, maxLength, minLength, required } from './form-validators/validators';\n\n\nconst CreateQuizPage = React.lazy(() => import('./pages/Create.quiz.page'))\nconst QuizzesListPage = React.lazy(() => import('./pages/Quizzes.list.page'))\nconst ManageQuizPage = React.lazy(() => import('./pages/Manage.quiz.page'))\nconst QuizPage = React.lazy(() => import('./pages/Quiz.page'))\n\n\n// const QuizPage = React.lazy((): any => {\n//    return new Promise((resolve) => {\n//       setTimeout(() => {\n//          return resolve(import('./pages/Quiz.page'))\n//       }, 2000);\n//    })\n// })\n\n\nfunction App() {\n   return (\n      <React.Fragment>\n         <Header />\n         <main>\n            <div className=\"container mt-4 mb-4\">\n               <Switch>\n                  <Suspense fallback={null} >\n                     <Route\n                        exact={true}\n                        path=\"/\"\n                        component={CreateQuizPage}\n                     />\n                     <Route\n                        exact={true}\n                        path=\"/quizzes-list\"\n                        component={QuizzesListPage}\n                     />\n                     <Route\n                        exact={true}\n                        path=\"/quiz/:quizId\"\n                        component={QuizPage}\n                     />\n                     <Route\n                        exact={true}\n                        path=\"/quiz/edit/:quizId\"\n                        component={ManageQuizPage}\n                     />\n                  </Suspense>\n               </Switch>\n            </div>\n         </main>\n         <Footer />\n      </React.Fragment>\n   );\n}\n\nexport default App;\n","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\redux\\quiz\\quiz.reducers.ts",[],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\pages\\Create.quiz.page.tsx",[],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\pages\\Quizzes.list.page.tsx",[],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\pages\\Manage.quiz.page.tsx",[],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\pages\\Quiz.page.tsx",["186"],"import React, { useEffect, useState } from 'react'\r\nimport { connect, useSelector } from 'react-redux'\r\nimport CardContainer from '../components/Card-container/Card.container'\r\nimport QuestionItem from '../components/Question-item/Question.item'\r\nimport QuizFinalResults from '../components/Quiz-final-results/Quiz.final.results'\r\nimport { QuizResults } from '../redux/quiz/model'\r\nimport { setCurrentQuizAction } from '../redux/quiz/quiz.action'\r\nimport { RootState } from '../redux/store'\r\nimport { QuizMainItem } from '../components/Quiz-main-item/Quiz.main.item'\r\nimport FadeAnimateContainer from '../components/Fade-animate-container/Fade.animate.container'\r\n\r\n\r\nlet results: QuizResults\r\n\r\nfunction QuizPage({ currentQuiz, match }: any) {\r\n   const { quiz } = useSelector((state: RootState) => {\r\n      const { quizId } = match.params\r\n      results = state.currentQuiz\r\n      return state.quizzes[quizId]\r\n   })\r\n\r\n   const [isSubmit, setIsSubmit] = useState<boolean>(false)\r\n\r\n   useEffect(() => {\r\n      currentQuiz(match.params.quizId)\r\n   }, [match.params.quizId])\r\n\r\n\r\n   return (\r\n      <React.Fragment>\r\n         <FadeAnimateContainer>\r\n            <CardContainer>\r\n               <h6>\r\n                  <small style={{ fontSize: '12px', float: 'right' }}>{quiz.dateCreated}</small>\r\n               </h6>\r\n               <br />\r\n               <QuizMainItem\r\n                  value={quiz.title}\r\n                  property={'Title'}\r\n               />\r\n               <hr />\r\n               <QuizMainItem\r\n                  value={quiz.description}\r\n                  property={'Description'}\r\n               />\r\n            </CardContainer>\r\n            {isSubmit ?\r\n               (<QuizFinalResults\r\n                  onBack={() => setIsSubmit(!isSubmit)}\r\n                  results={results}\r\n               />) : (\r\n                  <CardContainer>\r\n                     {quiz.questions.map((question, index) => {\r\n                        return <div key={question.questionId}>\r\n                           <QuestionItem question={question} />\r\n                        </div>\r\n                     })}\r\n                     <button\r\n                        className=\"btn btn-blue btn-sm\"\r\n                        onClick={() => {\r\n                           if (results.answers.length < quiz.questions.length) {\r\n                              return alert('Quiz did not completed')\r\n                           }\r\n                           setIsSubmit(!isSubmit)\r\n                        }} >\r\n                        Submit\r\n                     </button>\r\n                  </CardContainer>)}\r\n         </FadeAnimateContainer>\r\n      </React.Fragment>\r\n   )\r\n}\r\n\r\n\r\n\r\nfunction mapDispatchToProps(dispatch: Function) {\r\n   return {\r\n      currentQuiz: (quizId: string) => dispatch(setCurrentQuizAction(quizId))\r\n   }\r\n}\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(QuizPage)","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Header\\Header.tsx",[],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\redux\\quiz\\utils.ts",[],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\redux\\localstorage.ts",[],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\redux\\quiz\\quiz.actions.types.ts",[],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\redux\\quiz\\quiz.action.ts",[],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Quizzes-list\\Quizzes.list.tsx",[],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\According-list\\According.list.tsx",["187"],"import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { AddAnswer, EditQuestion, Question, RemoveQuestion, RemoveAnswer } from '../../redux/quiz/model'\r\nimport { addAnswerAction, editQuestionAction, removeQuestionAction, removeAnswerAction } from '../../redux/quiz/quiz.action'\r\nimport AnswerItem from '../Answer-item/Answer.item';\r\nimport CardContainer from '../Card-container/Card.container';\r\nimport ErrorMessage from '../Error-message/Error.message';\r\nimport AccordingItem from '../According-item/According.item';\r\nimport { confirmAlert } from '../../utils/confirm.alert';\r\nimport WithInput from '../With-input/With.input';\r\nimport { QuestionHeader } from '../Question-item/Question.item';\r\nimport AddAnswerForm from '../Add-answer-form/Add.answer.form';\r\nimport SmallMessage from '../Small-massage/Small.message';\r\n\r\nconst QuestionHeaderWhitInput = WithInput(QuestionHeader)\r\n\r\n\r\ninterface AccordingListProps {\r\n   quizId: string\r\n   questions: Question[],\r\n   removeQuestion: (info: RemoveQuestion) => void\r\n   removeAnswer: (info: RemoveAnswer) => void\r\n   addAnswer: (info: AddAnswer) => void\r\n   editQuestion: (info: EditQuestion) => void\r\n}\r\n\r\nfunction AccordingList({ editQuestion, removeAnswer, removeQuestion, addAnswer, quizId, questions }: AccordingListProps) {\r\n\r\n   const [isAddAnswer, setIsAddAnswer] = useState<boolean>(false)\r\n\r\n   return (\r\n      <React.Fragment>\r\n         <div className=\"accordion\" id=\"accordionExample\">\r\n            {questions.map((question) => {\r\n               return <CardContainer key={question.questionId}>\r\n                  <div key={question.questionId}>\r\n                     {question.numberOfAnswers < 2 && <SmallMessage\r\n                        message={'This question is missing an answer'}\r\n                        color=\"red\" />}\r\n                     <AccordingItem\r\n                        headerId={question.questionId}\r\n                        collapseTarget={question.questionId + 1}\r\n                        headerContent={question.question}\r\n                        headerName={'Question'}>\r\n                        <div className=\"mt-3 mb-3\">\r\n                           <button\r\n                              className=\"btn btn-pink btn-sm\"\r\n                              onClick={() => {\r\n                                 if (confirmAlert('question')) {\r\n                                    removeQuestion({\r\n                                       quizId: quizId,\r\n                                       questionId: question.questionId\r\n                                    })\r\n                                 }\r\n                              }}>\r\n                              Delete question\r\n                           </button>\r\n                           <button\r\n                              style={{ float: 'right' }}\r\n                              className={`${question.numberOfAnswers >= 6 || isAddAnswer ? 'disabled-btn' : ''} btn btn-blue btn-sm`}\r\n                              onClick={() => {\r\n                                 setIsAddAnswer(!isAddAnswer)\r\n                              }}>\r\n                              Add answer +\r\n                          </button>\r\n                        </div>\r\n                        {!isAddAnswer &&\r\n                           <React.Fragment>\r\n                              <QuestionHeaderWhitInput\r\n                                 value={question.question}\r\n                                 property={'qestion'}\r\n                                 outPutNewValue={(value: string) => {\r\n                                    editQuestion({\r\n                                       questionId: question.questionId,\r\n                                       value: value,\r\n                                       quizId: quizId\r\n                                    })\r\n                                 }}\r\n                              />\r\n                              <hr />\r\n                           </React.Fragment>}\r\n                        {isAddAnswer &&\r\n                           <React.Fragment>\r\n                              <AddAnswerForm\r\n                                 addAnswer={(value: string) => {\r\n                                    addAnswer({\r\n                                       quizId: quizId,\r\n                                       value: value,\r\n                                       questionId: question.questionId\r\n                                    })\r\n                                    setIsAddAnswer(!isAddAnswer)\r\n                                 }}\r\n                                 closeAddAnswerForm={() => setIsAddAnswer(!isAddAnswer)}\r\n                              />\r\n                              <hr />\r\n                           </React.Fragment>}\r\n                        <br />\r\n                        <small><strong>Answers:</strong></small>\r\n                        <ul className=\"list-group\">\r\n                           {question.answers.map((answer, index) => {\r\n                              return <CardContainer key={index + question.questionId}>\r\n                                 <AnswerItem\r\n                                    answer={answer}\r\n                                    index={index}>\r\n                                    <span\r\n                                       className=\"badge badge-center\"\r\n                                       style={{ backgroundColor: 'rgb(236, 12, 87)' }}\r\n                                       onClick={() => {\r\n                                          removeAnswer({\r\n                                             quizId: quizId,\r\n                                             questionId: question.questionId,\r\n                                             index: index\r\n                                          })\r\n                                       }}>\r\n                                       x\r\n                                    </span>\r\n                                 </AnswerItem>\r\n                              </CardContainer>\r\n                           })}\r\n                        </ul>\r\n                     </AccordingItem>\r\n                  </div>\r\n               </CardContainer>\r\n            })}\r\n         </div>\r\n      </React.Fragment>\r\n   )\r\n}\r\n\r\n\r\n\r\n\r\nfunction mapDispatchToProps(dispatch: Function) {\r\n   return {\r\n      removeQuestion: (info: RemoveQuestion) => dispatch(removeQuestionAction(info)),\r\n      removeAnswer: (info: RemoveAnswer) => dispatch(removeAnswerAction(info)),\r\n      addAnswer: (info: AddAnswer) => dispatch(addAnswerAction(info)),\r\n      editQuestion: (info: EditQuestion) => dispatch(editQuestionAction(info))\r\n   }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(AccordingList)\r\n\r\n\r\n","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Add-question-form\\Add.question.form.tsx",[],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Card-container\\Card.container.tsx",[],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Quiz-final-results\\Quiz.final.results.tsx",[],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Question-item\\Question.item.tsx",[],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\utils\\first.chart.uppercase.ts",[],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Error-message\\Error.message.tsx",[],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Quiz-card-item\\Quiz.card.item.tsx",["188","189","190"],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\According-item\\According.item.tsx",[],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Answer-item\\Answer.item.tsx",[],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Alert-window\\Alert.window.tsx",[],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\redux\\toggler\\toggle.reducer.ts",[],["191","192"],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\redux\\toggler\\toggler.actions.types.ts",[],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\redux\\toggler\\toggler.actions.ts",[],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\With-input\\With.input.tsx",[],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\utils\\confirm.alert.ts",[],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Add-answer-form\\Add.answer.form.tsx",[],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Loader\\Loader.tsx",[],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Fade-animate-container\\Fade.animate.container.tsx",[],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Create-main-quiz-form\\Create.main.quiz.form.tsx",[],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Small-massage\\Small.message.tsx",[],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Form-input\\Form.input.tsx",[],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Quiz-main-item\\Quiz.main.item.tsx",[],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\components\\Footer\\Footer.tsx",["193","194"],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\hooks\\use.form.ts",["195","196"],"import { ChangeEvent, FormEvent, useEffect, useState } from 'react'\r\nimport { FormErros } from '../form-validators/validators'\r\n// import { AddAnswer, AddQuestion, Quiz } from '../redux/quiz/model'\r\n// type FormsInitStateTypes = Quiz | AddAnswer | AddQuestion\r\n\r\nexport function useForm(initialState: any, callSubmit: Function, validate: Function) {\r\n\r\n    const [isSubmit, setIsSubmit] = useState<boolean>(false)\r\n\r\n    const [values, setValues] = useState<any>(initialState)\r\n\r\n    const [errors, setErrors] = useState<FormErros>(initialState)\r\n\r\n\r\n    function handleChange(event: ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>) {\r\n        const { name, value } = event.target\r\n\r\n        setValues((prev: any) => {\r\n            return {\r\n                ...prev,\r\n                [name]: value\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    function handleSubmit(event: FormEvent) {\r\n        event.preventDefault()\r\n        setErrors(() => validate(values))\r\n        setIsSubmit(() => true)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if (Object.keys(errors).length === 0 && isSubmit) {\r\n            callSubmit()\r\n        }\r\n    }, [errors])\r\n\r\n\r\n    function resetForm() {\r\n        setValues(() => initialState)\r\n    }\r\n\r\n\r\n    return [values, handleChange, handleSubmit, isSubmit, errors]\r\n}","C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\form-validators\\validators.ts",[],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\redux\\quiz\\quiz.actions.async.types.ts",[],"C:\\Users\\nirku\\Desktop\\quiz builder\\my-app\\src\\redux\\quiz\\quiz.actions.async.ts",[],{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","replacedBy":"200"},{"ruleId":"201","severity":1,"message":"202","line":6,"column":10,"nodeType":"203","messageId":"204","endLine":6,"endColumn":15},{"ruleId":"201","severity":1,"message":"205","line":6,"column":17,"nodeType":"203","messageId":"204","endLine":6,"endColumn":26},{"ruleId":"201","severity":1,"message":"206","line":6,"column":28,"nodeType":"203","messageId":"204","endLine":6,"endColumn":37},{"ruleId":"201","severity":1,"message":"207","line":6,"column":39,"nodeType":"203","messageId":"204","endLine":6,"endColumn":47},{"ruleId":"208","severity":1,"message":"209","line":26,"column":7,"nodeType":"210","endLine":26,"endColumn":28,"suggestions":"211"},{"ruleId":"201","severity":1,"message":"212","line":7,"column":8,"nodeType":"203","messageId":"204","endLine":7,"endColumn":20},{"ruleId":"201","severity":1,"message":"213","line":2,"column":19,"nodeType":"203","messageId":"204","endLine":2,"endColumn":30},{"ruleId":"201","severity":1,"message":"214","line":10,"column":10,"nodeType":"203","messageId":"204","endLine":10,"endColumn":19},{"ruleId":"208","severity":1,"message":"215","line":45,"column":7,"nodeType":"210","endLine":45,"endColumn":9,"suggestions":"216"},{"ruleId":"197","replacedBy":"217"},{"ruleId":"199","replacedBy":"218"},{"ruleId":"219","severity":1,"message":"220","line":11,"column":25,"nodeType":"221","endLine":11,"endColumn":37},{"ruleId":"222","severity":1,"message":"223","line":16,"column":29,"nodeType":"224","endLine":16,"endColumn":44},{"ruleId":"208","severity":1,"message":"225","line":38,"column":8,"nodeType":"210","endLine":38,"endColumn":16,"suggestions":"226"},{"ruleId":"201","severity":1,"message":"227","line":41,"column":14,"nodeType":"203","messageId":"204","endLine":41,"endColumn":23},"no-native-reassign",["228"],"no-negated-in-lhs",["229"],"@typescript-eslint/no-unused-vars","'email' is defined but never used.","Identifier","unusedVar","'maxLength' is defined but never used.","'minLength' is defined but never used.","'required' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentQuiz'. Either include it or remove the dependency array. If 'currentQuiz' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["230"],"'ErrorMessage' is defined but never used.","'useSelector' is defined but never used.","'RootState' is defined but never used.","React Hook useEffect has missing dependencies: 'isStatusOk', 'quiz.numberQuestions', and 'quiz.questions'. Either include them or remove the dependency array.",["231"],["228"],["229"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","React Hook useEffect has missing dependencies: 'callSubmit' and 'isSubmit'. Either include them or remove the dependency array. If 'callSubmit' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["232"],"'resetForm' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},"Update the dependencies array to be: [currentQuiz, match.params.quizId]",{"range":"239","text":"240"},"Update the dependencies array to be: [isStatusOk, quiz.numberQuestions, quiz.questions]",{"range":"241","text":"242"},"Update the dependencies array to be: [callSubmit, errors, isSubmit]",{"range":"243","text":"244"},[1053,1074],"[currentQuiz, match.params.quizId]",[1402,1404],"[isStatusOk, quiz.numberQuestions, quiz.questions]",[1155,1163],"[callSubmit, errors, isSubmit]"]